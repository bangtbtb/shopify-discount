// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
  // url      = "postgres://admin:hellopass@localhost:5432/vol_discount"
}

// Automatic discount type
enum ADT {
  None
  Volume
  Bundle
  Shipping
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Discount {
  id            String    @id
  shop          String
  status        String
  title         String
  label         String    @default("")
  metafield     String
  startAt       DateTime
  endAt         DateTime?
  type          ADT
  subType       String    @default("")
  createdAt     DateTime? @default(now())
  productIds    String[]
  collectionIds String[]

  DiscountApplied DiscountApplied[]

  @@index([shop, createdAt])
  @@index([label])
}

model DiscountViews {
  id         String   @id @default(uuid()) // Discount id 
  shop       String
  views      BigInt
  discountId String
  createdAt  DateTime @default(now())

  @@index([shop, createdAt, discountId])
}

model Orders {
  id            String            @id
  shop          String
  wasApplied    Boolean
  subTotalPrice Decimal
  products      String[]          @default([])
  createdAt     DateTime          @default(now())
  applied       DiscountApplied[]

  @@index([shop, createdAt])
}

model DiscountApplied {
  id             String    @id @default(uuid())
  shop           String
  discountId     String
  discount       Float // Discount value
  total          Float // Total  
  orderAppliedId String?
  createdAt      DateTime  @default(now())
  OrderApplied   Orders?   @relation(fields: [orderAppliedId], references: [id])
  Discount       Discount? @relation(fields: [discountId], references: [id])

  @@index([shop, createdAt, discountId])
}
